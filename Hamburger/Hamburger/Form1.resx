<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        EQBERAEREAREQD//2Q==
</value>
  </data>
</root>